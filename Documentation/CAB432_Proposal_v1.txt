Overall Mashup Purpose and Description

The API mashup provides users with visual and interactive way of exploring nearby places. The application detects locations of the web visitors and displays some basic information, including an interactive map and weather information in the area. Then user can discover the nearby businesses and services using some provided buttons labelled with place types/categories. However, other place types/categories still can be searched via a search box.

Use Cases

Use case 1: As a user, I would like the system to be able to detect my location so that it can show me the weather information in my area, such as current temperature and weather description.
Use case 2: As a user, I would like the system to display the current weather information so that I can decide whether I should go out or not. (Similar to the first use case, but different purpose.)
Use case 3: As a user, I would like to be able to toggle between the temperature units so that I can see the current temperature in different units, including Celsius (°C), Fahrenheit  (°F) and Kelvin (K).
Use case 4: As a user, I would like the system to be able to detect my location so that it displays a map of the area I am in.
Use case 5: As a user, I would like the system to display an interactive map so that I can explore the area I am in using that map.
Use case 6: As a user, I would like the system to provide buttons labelled with place types/categories so that I can find commonly searched businesses and services easily without typing.
Use case 7: As a user, I would like to be able to search on the map so that I can find other nearby places apart from the provided categories.

Note: The term 'user' refers to both tourists and local users in a particular area.

Services and Data APIs

Telize API
The Telize API allows users to request a website visitor's geolocation information. It uses an IP address to obtain location data using REST calls, then return the requested geolocation data in JSON format.

Open Weather Map API
The Open Weather Map API allows users to retrieve the current weather information with various options of parameters, such as city name or geographic coordinate. It uses REST calls and return data in JSON format.

Flickr API
The Flickr API allows users to retrieve photos from the Flickr photo sharing service. It supports REST and responds in many formats, including JSON.

Google Maps API
The Google Maps API is commonly used to embed Google Maps onto web applications using JavaScript interface.
 
Google Places API
The Google Places API is a web service that returns information about a particular place using latitude and longitude coordinates. This API will be used with the Google Maps API.

List of Services for Each User Story

Use case 1: Telize API, Open Weather Map API and Flickr API (background image using a short weather description of a particular city as a keyword) 
Use case 2: Telize API, Open Weather Map API and Flickr API
Use case 3: Open Weather Map API 
Use case 4: Google Map API and Google Places API
Use case 5: Google Map API and Google Places API
Use case 6: Google Map API and Google Places API
Use case 7: Google Map API and Google Places API

Sever Side

Node.js
Node.js will be used as a web server because it is event-based rather than thread-based like Apache, and I/O operations in Node.js is asynchronous, which means it can handle incoming requests while another I/O operation is taking place.

Express.js
Express.js will be used as a web application framework of Node.js.

Client Side

JavaScript
JavaScript will be used as a client side scripting language.

On the presentation side, HTML will be used as a markup language and Twitter Bootstrap will be used as a standard web page layout.

The application will be deployed via a Docker container, sitting on top of Ubuntu Server (15.04) VM on Azure.
